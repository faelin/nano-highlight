syntax "nginx" "nginx.*\.conf$" "\.nginx$"
header "^(server|upstream)[a-z ]*\{$"

NUMBER:   "(^|[[:space:]])([0-9]+(ms|[kKmMshdwy])?[[:space:]]*?)+($|;)"
KEYWORD:  "(^|[[:space:]{;])(accept_mutex(_delay)?|access_log|add_(header|(after|before)_body))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(addition_types|aio(_write)?|alias|allow|ancient_browser(_value)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])auth_(basic|http_(header|pass_client_cert|timeout)|request(_set)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(autoindex_(exact_size|format|localtime)|break|charset|charset_(map|types))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(autoindex|chunked_transfer_encoding)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])client_(body_(buffer_size|in_(file_only|single_buffer)|temp_path|timeout))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])client_(header_(buffer_size|timeout)|max_body_size)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(connection_pool_size|create_full_put_path|daemon|dav_(access|methods))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(debug_(connection|points)|default_type|deny|directio(_alignment)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(disable_symlinks|empty_gif|env|error_(log|page)|etag|expires)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])f4f(_buffer_size)?([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(bind|buffer(_size|ing|s)|busy_buffers_size|cache)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_cache_(bypass|key|lock|lock_(age|timeout)|methods|min_uses|path)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_cache_(purge|revalidate|use_stale|valid)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(catch_stderr|(connect|read|send)_timeout|force_ranges|hide_header)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(ignore_(client_abort|headers)|index|intercept_errors|keep_conn)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(limit_rate|max_temp_file_size|next_upstream)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(next_upstream_(timeout|tries)|no_cache|param|pass)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(pass_(header|request_(body|headers))|request_buffering|send_lowat)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])fastcgi_(store|store_access|temp_(file_write_size|path))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(flv|geo|geoip_(city|country|org|proxy|proxy_recursive))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(gunzip|gunzip_buffers|gzip)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])gzip_(buffers|comp_level|disable|http_version)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])gzip_(min_length|proxied|static|types|vary)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(hash|health_check|health_check_timeout|hls)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])hls_(buffers|forward_args|fragment|mp4_(max)?buffer_size)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])http2_(chunk_size|idle_timeout|max_(concurrent_streams|(field|header)_size))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])http2_recv_(buffer_size|timeout)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(if|if_modified_since|ignore_invalid_headers|image_filter)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])image_filter_(buffer|interlace|jpeg_quality|sharpen|transparency)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])imap_(auth|capabilities|client_buffer)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(index|internal|ip_hash|keepalive)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])keepalive_(disable|requests|timeout)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(large_client_header_buffers|least_(conn|time))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])limit_(conn|conn_(log_level|status|zone)|except|rate|rate_after|req|zone)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])limit_req_(log_level|status|zone)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(lingering_(close|time|timeout)|listen|location)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(log_(format|not_found|subrequest))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(map|map_hash_(bucket|max)_size|master_process|match|max_ranges)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])memcached_(bind|buffer_size|(connect|read|send)_timeout|force_ranges)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])memcached_(gzip_flag|next_(upstream|upstream_(timeout|tries))|pass)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(merge_slashes|min_delete_depth|modern_browser)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(modern_browser_value|mp4)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])mp4_((max_)?buffer_size|limit_rate(_after)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(msie_(padding|refresh)|multi_accept|ntlm|open_file_cache)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(open_file_cache_(errors|min_uses|valid)|open_log_file_cache)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(output_buffers|override_charset|pcre_jit|perl|perl_(modules|require|set))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(pop3_(auth|capabilities)|port_in_redirect)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(postpone_output|protocol|proxy)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(bind|buffer(_size|ing|s)?|busy_buffers_size|cache)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_cache_(bypass|convert_head|key|lock|lock_(age|timeout)|methods)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_cache_(min_uses|path|purge|revalidate|use_stale|valid)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(cookie_(domain|path)|download_rate|force_ranges)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(headers_hash_(bucket|max)_size|hide_header|http_version)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(ignore_(client_abort|headers)|intercept_errors|limit_rate)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(max_temp_file_size|next_upstream(_timeout|_tries)?|no_cache|pass)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_pass_(error_message|header|request_(body|headers))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_((connect|read|send)_timeout|redirect|request_buffering|responses)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(send_lowat|set_(body|header)|ssl)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_ssl_(ciphers|crl|name|protocols)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_ssl_(server_name|session_reuse|verify(_depth)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])proxy_(store(_access)?|temp_(file_write_size|path)|timeout|upload_rate)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(queue|random_index|read_ahead|real_ip_(header|recursive))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(recursive_error_pages|referer_hash_(bucket|max)_size|request_pool_size)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(reset_timedout_connection|resolver(_timeout)?|return|rewrite(_log)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])scgi_(bind|buffer(_size|ing|s)|busy_buffers_size|cache)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(sc|uws)gi_cache_(bypass|key|lock|lock_(age|timeout)|methods)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(sc|uws)gi_cache_(min_uses|path|purge|revalidate|use_stale|valid)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])scgi_((connect|read|send)_timeout|force_ranges|hide_header)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])scgi_(ignore_(client_abort|headers)|intercept_errors|limit_rate)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])scgi_(max_temp_file_size|next_upstream|next_upstream_(timeout|tries))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])scgi_(no_cache|param|pass|pass_(header|request_(body|headers)))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])scgi_(request_buffering|store(_access)?|temp_(file_write_size|path))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(satisfy|secure_link|secure_link_(md5|secret)|send_(lowat|timeout))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(sendfile(_max_chunk)?|server|server_(name|tokens))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])server_name(_in_redirect|s_hash_(bucket|max)_size)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(session_log|session_log_(format|zone)|set|set_real_ip_from|slice)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(smtp_(auth|capabilities)|source_charset|spdy_(chunk_size|headers_comp))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(split_clients|ssi|ssl)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])ssi_(last_modified|min_file_chunk|silent_errors|types|value_length)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])ssl_(buffer_size|ciphers)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])ssl_(crl|dhparam|ecdh_curve|engine|handshake_timeout)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])ssl_(prefer_server_ciphers|protocols)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])ssl_session_(cache|ticket_key|tickets|timeout)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])ssl_(stapling(_verify)?|verify_(client|depth))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(starttls|state|(stub_)?status|status_(format|zone)|sticky(_cookie_insert)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(sub_filter|sub_filter_(last_modified|once|types)|tcp_no(delay|push))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(thread_pool|timeout|timer_resolution|try_files|types)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(types_hash_(bucket|max)_size|underscores_in_headers)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(uninitialized_variable_warn|upstream|use(r|id)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])userid_(domain|expires|mark|name|p3p|service)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_(bind|buffer(_size|ing|s)|busy_buffers_size|cache)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_((connect|read|send)_timeout|force_ranges|hide_header)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_(ignore_(client_abort|headers)|intercept_errors|limit_rate)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_(max_temp_file_size|modifier[12]|next_upstream)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_(next_upstream_(timeout|tries)|no_cache|param|pass)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_(pass_(header|request_(body|headers))|request_buffering)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_ssl_(ciphers|crl|name|protocols)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_ssl_(server_name|session_reuse|verify(_depth)?)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])uwsgi_(store(_access)?|temp_(file_write_size|path))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(valid_referers|variables_hash_(bucket|max)_size)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])worker_(aio_requests|connections|cpu_affinity)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])worker_(priority|processes|rlimit_(core|nofile))([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])(xclient|xml_entities|zone)([[:space:]]|$)"
KEYWORD:  "(^|[[:space:]{;])xslt_(last_modified|(string_)?param|stylesheet|types)([[:space:]]|$)"
SECTION:  "\<(events|http|location|mail|server|stream)[[:space:]]*\{"

# Context-sensitive keywords
KEYWORD:  "(^|[[:space:]{;])deny[[:space:]]+all[[:space:]]*([;#]|$)"
KEYWORD:  "(^|[[:space:]{;])gzip_proxied([[:space:]]+(off|expired|no-cache|no-store|private|no_last_modified|no_etag|auth|any))+[[:space:]]*([;#]|$)"
KEYWORD:  "(^|[[:space:]{;])(worker_cpu_affinity|worker_processes)[[:space:]]+auto[[:space:]]*([;#]|$)"
+WHITESPACE

# Special cases for directives that take RegExp/path/URL as a single parameter
PATH:     start="(^|[[:space:]{;])(auth_basic_user_file|include|load_module|lock_file)([[:space:]]|$)" end=";"
PATH:     start="(^|[[:space:]{;])(pid|root|userid_path|working_directory)([[:space:]]|$)" end=";"
PATH:     start="(^|[[:space:]{;])(proxy|uwsgi)_ssl_(certificate(_key)?|trusted_certificate)([[:space:]]|$)" end=";"
PATH:     start="(^|[[:space:]{;])((proxy_|uwsgi_)?ssl_password|ssl_stapling)_file([[:space:]]|$)" end=";"
PATH:     start="(^|[[:space:]{;])ssl_((client_|trusted_)?certificate|certificate_key)([[:space:]]|$)" end=";"
URL:      start="(^|[[:space:]{;])(auth_http|ssl_stapling_responder)([[:space:]]|$)" end=";"
REGEXP:   start="(^|[[:space:]{;])fastcgi_split_path_info([[:space:]]|$)" end="(^|[^\]);"
KEYWORD:  "(^|[[:space:]{;])(auth_(basic_user_file|http)|fastcgi_split_path_info)([[:space:]]+|$)"
KEYWORD:  "(^|[[:space:]{;])(load_module|lock_file|pid|root|userid_path|working_directory)([[:space:]]+|$)"
KEYWORD:  "(^|[[:space:]{;])(proxy|uwsgi)_ssl_(certificate(_key)?|trusted_certificate)([[:space:]]+|$)"
KEYWORD:  "(^|[[:space:]{;])(proxy_|uwsgi_)?ssl_password_file|ssl_stapling_(file|responder)([[:space:]]+|$)"
KEYWORD:  "(^|[[:space:]{;])ssl_((client_|trusted_)?certificate|certificate_key|stapling_(file|responder))([[:space:]]+|$)"
# The 'include' directive should be highlighted as a macro because it includes other files
MACRO:    "(^|[[:space:]{;])include([[:space:]]+|$)"
PLAIN:    "^[[:space:]]+"

OPERATOR: "[{};]+"
REGEXP:   "~[[:space:]]+(\\.|[^ ])+"
ESCAPE:   "\\."
BOOLEAN:  "\<(on|off)\>"
OPERATOR: "~[[:space:]]+"
+STRING
STRING:   start="'$" end="';$"
VARIABLE: "\$[A-Za-z][A-Za-z0-9_]*"
+HASHCOMMENT
+TODO
+LINT
